name: CI

on:
    push:
        branches: [ master ]
    pull_request:
    schedule:
        -   cron: '0 0 * * MON'

jobs:
    check-cs:
        name: Check Coding Standards
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: PHP-CS-Fixer
              uses: docker://oskarstark/php-cs-fixer-ga
              with:
                args: --config=.php-cs-fixer.php --diff --dry-run

    phpstan:
        name: PHPStan
        runs-on: ubuntu-latest
        steps:
            - name: "Checkout"
              uses: actions/checkout@v2

            - name: Setup PHP, with composer and extensions
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 7.4

            - name: PHPStan
              uses: docker://oskarstark/phpstan-ga
              env:
                REQUIRE_DEV: true
              with:
                args: analyse

    ci:
        name: Test PHP ${{ matrix.php-version }} ${{ matrix.name }}
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                php-version: ['7.4', '8.0']
                composer-flags: ['']
                name: ['']
                include:
                    - php-version: 7.4
                      composer-flags: '--prefer-lowest'
                      name: '(prefer lowest dependencies)'

        services:
          elasticsearch:
            image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.8.0
            ports:
              - '9200:9200'
            options: >-
              --env "discovery.type=single-node"

        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Setup PHP, with composer and extensions
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php-version }}

            - name: Install Composer dependencies
              run: composer update --prefer-dist --no-interaction --no-ansi ${{ matrix.composer-flags }}

            - name: Wait for ES to be ready
              run: |
                while ! curl -s -X GET http://127.0.0.1:9200/_cluster/health\?wait_for_status\=green\&timeout\=60s | grep -q '"status":"green"'
                do
                  echo "==> Waiting for cluster green status" && sleep 1
                done

            - name: Run Tests
              run: make test
